{"name": "test_login", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x3bfe83+66515]\n\tGetHandleVerifier [0x0x3bfec4+66580]\n\t(No symbol) [0x0x1adc48]\n\t(No symbol) [0x0x1f8704]\n\t(No symbol) [0x0x1f8aab]\n\t(No symbol) [0x0x23f482]\n\t(No symbol) [0x0x21b214]\n\t(No symbol) [0x0x23cba7]\n\t(No symbol) [0x0x21afc6]\n\t(No symbol) [0x0x1ec2ca]\n\t(No symbol) [0x0x1ed154]\n\tGetHandleVerifier [0x0x6173b3+2521347]\n\tGetHandleVerifier [0x0x612333+2500739]\n\tGetHandleVerifier [0x0x3e7cd4+229924]\n\tGetHandleVerifier [0x0x3d8238+165768]\n\tGetHandleVerifier [0x0x3deced+193085]\n\tGetHandleVerifier [0x0x3c8198+100072]\n\tGetHandleVerifier [0x0x3c8330+100480]\n\tGetHandleVerifier [0x0x3b25ea+11066]\n\tBaseThreadInitThunk [0x0x762b5d49+25]\n\tRtlInitializeExceptionChain [0x0x7776d1ab+107]\n\tRtlGetAppContainerNamedObjectPath [0x0x7776d131+561]\n\t(No symbol) [0x0]", "trace": "self = <testScripts.test_T01Login.Test_Login_ElPortal object at 0x0000020E58B5FB10>\nsetup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"e30cfa929fcc01bde0b6ab83054e019e\")>\n\n    @pytest.mark.order(1)\n    def test_login(self, setup):\n        self.elportal = setup\n>       self.login(self.elportal)\n\ntestScripts\\test_T01Login.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntestScripts\\base_test.py:32: in login\n    wait.until(EC.visibility_of_element_located((By.ID, \"email\")))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"e30cfa929fcc01bde0b6ab83054e019e\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x0000020E58BF0220>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x3bfe83+66515]\nE       \tGetHandleVerifier [0x0x3bfec4+66580]\nE       \t(No symbol) [0x0x1adc48]\nE       \t(No symbol) [0x0x1f8704]\nE       \t(No symbol) [0x0x1f8aab]\nE       \t(No symbol) [0x0x23f482]\nE       \t(No symbol) [0x0x21b214]\nE       \t(No symbol) [0x0x23cba7]\nE       \t(No symbol) [0x0x21afc6]\nE       \t(No symbol) [0x0x1ec2ca]\nE       \t(No symbol) [0x0x1ed154]\nE       \tGetHandleVerifier [0x0x6173b3+2521347]\nE       \tGetHandleVerifier [0x0x612333+2500739]\nE       \tGetHandleVerifier [0x0x3e7cd4+229924]\nE       \tGetHandleVerifier [0x0x3d8238+165768]\nE       \tGetHandleVerifier [0x0x3deced+193085]\nE       \tGetHandleVerifier [0x0x3c8198+100072]\nE       \tGetHandleVerifier [0x0x3c8330+100480]\nE       \tGetHandleVerifier [0x0x3b25ea+11066]\nE       \tBaseThreadInitThunk [0x0x762b5d49+25]\nE       \tRtlInitializeExceptionChain [0x0x7776d1ab+107]\nE       \tRtlGetAppContainerNamedObjectPath [0x0x7776d131+561]\nE       \t(No symbol) [0x0]\n\n..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException"}, "attachments": [{"name": "log", "source": "a4b69bbf-2864-4fab-9240-4221c4781d15-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "99778d3a-8ba8-4ac8-8a7b-1434d2532956-attachment.txt", "type": "text/plain"}], "start": 1760478180920, "stop": 1760478218773, "uuid": "3267630c-ceee-416f-813a-7b9d18ea6618", "historyId": "840d37c5d6a3c176803dbac2008642ab", "testCaseId": "840d37c5d6a3c176803dbac2008642ab", "fullName": "test_T01Login.Test_Login_ElPortal#test_login", "labels": [{"name": "suite", "value": "test_T01Login"}, {"name": "subSuite", "value": "Test_Login_ElPortal"}, {"name": "host", "value": "NGC-4HG1R74"}, {"name": "thread", "value": "25064-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_T01Login"}], "titlePath": ["test_T01Login.py", "Test_Login_ElPortal"]}