{"name": "test_login", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0xa5c333+65459]\n\tGetHandleVerifier [0x0xa5c374+65524]\n\t(No symbol) [0x0x87d973]\n\t(No symbol) [0x0x8c76e7]\n\t(No symbol) [0x0x8c7a8b]\n\t(No symbol) [0x0x90dea2]\n\t(No symbol) [0x0x8e9e44]\n\t(No symbol) [0x0x90b606]\n\t(No symbol) [0x0x8e9bf6]\n\t(No symbol) [0x0x8bb38e]\n\t(No symbol) [0x0x8bc274]\n\tGetHandleVerifier [0x0xcdeda3+2697763]\n\tGetHandleVerifier [0x0xcd9ec7+2677575]\n\tGetHandleVerifier [0x0xa84194+228884]\n\tGetHandleVerifier [0x0xa749f8+165496]\n\tGetHandleVerifier [0x0xa7b18d+192013]\n\tGetHandleVerifier [0x0xa647d8+99416]\n\tGetHandleVerifier [0x0xa64972+99826]\n\tGetHandleVerifier [0x0xa4ebea+10346]\n\tBaseThreadInitThunk [0x0x760c5d49+25]\n\tRtlInitializeExceptionChain [0x0x779bd1ab+107]\n\tRtlGetAppContainerNamedObjectPath [0x0x779bd131+561]", "trace": "self = <testScripts.test_T16AllocateSlots.Test_Allocate_Slots object at 0x000001D5A0E77890>\nsetup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"ca4544037f0121bf7cdbaeeba8da0db8\")>\n\n    @pytest.mark.order(1)\n    def test_login(self, setup):\n        self.elportal = setup\n        self.login(self.elportal)\n        self.logger.info(\"******** Verifying Slots Allocation********\")\n        self.logger.info(\"******** Define the Job Driver********\")\n        self.vcb = VCBCPage(self.elportal)\n        windowsIDs = self.elportal.window_handles\n        parentwindowid = windowsIDs[0]\n        self.logger.info(\"******** Click DFC Rotations Menu ********\")\n        self.vcb.clickVCBCMgt()\n        self.logger.info(\"******** Select the VCBC********\")\n        self.vcb.singleVCBC()\n        self.logger.info(\"******** Click Allocate Slots Button ********\")\n        self.vcb.allocateSlotBtn()\n        self.logger.info(\"********Switch to the Allocate Slots Modal********\")\n        self.elportal.switch_to.window(parentwindowid)\n        self.logger.info(\"******** Click the Select Faculty********\")\n        self.vcb.selFaculty()\n        self.logger.info(\"******** Select A Faculty********\")\n>       self.vcb.facultyProfKerluke()\n\ntestScripts\\test_T16AllocateSlots.py:37: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nPages\\VCBCPage.py:216: in facultyProfKerluke\n    WebDriverWait(self.elportal, 10).until(EC.element_to_be_clickable((By.XPATH, \"//select[@name='faculty_id']/option[@value='32']\"))).click()\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"ca4544037f0121bf7cdbaeeba8da0db8\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x000001D5A0A1D760>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0xa5c333+65459]\nE       \tGetHandleVerifier [0x0xa5c374+65524]\nE       \t(No symbol) [0x0x87d973]\nE       \t(No symbol) [0x0x8c76e7]\nE       \t(No symbol) [0x0x8c7a8b]\nE       \t(No symbol) [0x0x90dea2]\nE       \t(No symbol) [0x0x8e9e44]\nE       \t(No symbol) [0x0x90b606]\nE       \t(No symbol) [0x0x8e9bf6]\nE       \t(No symbol) [0x0x8bb38e]\nE       \t(No symbol) [0x0x8bc274]\nE       \tGetHandleVerifier [0x0xcdeda3+2697763]\nE       \tGetHandleVerifier [0x0xcd9ec7+2677575]\nE       \tGetHandleVerifier [0x0xa84194+228884]\nE       \tGetHandleVerifier [0x0xa749f8+165496]\nE       \tGetHandleVerifier [0x0xa7b18d+192013]\nE       \tGetHandleVerifier [0x0xa647d8+99416]\nE       \tGetHandleVerifier [0x0xa64972+99826]\nE       \tGetHandleVerifier [0x0xa4ebea+10346]\nE       \tBaseThreadInitThunk [0x0x760c5d49+25]\nE       \tRtlInitializeExceptionChain [0x0x779bd1ab+107]\nE       \tRtlGetAppContainerNamedObjectPath [0x0x779bd131+561]\n\n..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException"}, "attachments": [{"name": "log", "source": "59e50a11-ba75-4b6d-b023-aa2a02f782ea-attachment.txt", "type": "text/plain"}], "start": 1759854213334, "stop": 1759854230998, "uuid": "6afe088a-a77e-4eaa-80e7-7829b3f3f7ed", "historyId": "a3e8a51679c335d9678915d4fdc48b92", "testCaseId": "a3e8a51679c335d9678915d4fdc48b92", "fullName": "test_T16AllocateSlots.Test_Allocate_Slots#test_login", "labels": [{"name": "suite", "value": "test_T16AllocateSlots"}, {"name": "subSuite", "value": "Test_Allocate_Slots"}, {"name": "host", "value": "NGC-4HG1R74"}, {"name": "thread", "value": "41544-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_T16AllocateSlots"}], "titlePath": ["test_T16AllocateSlots.py", "Test_Allocate_Slots"]}